name: Create Module Release from Branch

on:
  push:
    tags:
      - "*-v*" # Matches any tag containing a module name followed by "-v"

jobs:
  create_release:
    runs-on: ubuntu-latest

    steps:
      - name: Extract module and version from tag
        id: extract
        run: |
          # Extract module name (e.g., vpc) and version (e.g., v1.0.2) from tag
          TAG_NAME=${GITHUB_REF##*/}
          MODULE_NAME=${TAG_NAME%-*}  # Everything before the last '-'
          VERSION=${TAG_NAME#*-}      # Everything after the first '-'

          # Construct branch name (e.g., vpc-module)
          BRANCH_NAME="${MODULE_NAME}-module"

          echo "TAG_NAME=${TAG_NAME}" >> $GITHUB_ENV
          echo "MODULE_NAME=${MODULE_NAME}" >> $GITHUB_ENV
          echo "VERSION=${VERSION}" >> $GITHUB_ENV
          echo "BRANCH_NAME=${BRANCH_NAME}" >> $GITHUB_ENV

      - name: Checkout the module branch
        uses: actions/checkout@v2
        with:
          ref: ${{ env.BRANCH_NAME }} # Check out the specific module branch

      - name: Confirm branch checkout
        run: |
          echo "Checked out branch: $(git branch --show-current)"

      - name: List module files (optional, for verification)
        run: ls -R

      - name: Create Release
        uses: ncipollo/release-action@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          tag: ${{ env.TAG_NAME }} # Use the pushed tag for the release
          release_name: "${{ env.MODULE_NAME }} v${{ env.VERSION }}"
          draft: false
          prerelease: false
          body: "Release of module ${{ env.MODULE_NAME }} version ${{ env.VERSION }}"
          files: |
            ./* # Include all files in the branch; adjust as needed for specific files
